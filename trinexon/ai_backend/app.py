from flask import Flask, request, jsonify
from flask_cors import CORS
import mysql.connector

app = Flask(__name__)
CORS(app)

# üîó MySQL adatb√°zis kapcsolat
db_config = {
    "host": "localhost",
    "user": "root",
    "password": "KrisztiaN12",
    "database": "trinexon"
}

# ü§ñ AI logika ‚Äì aj√°nlott fizet√©s kisz√°m√≠t√°sa
def recommend_salary(department):
    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        cursor.execute("""
            SELECT amount FROM finance_records
            JOIN employees ON finance_records.employee_id = employees.id
            WHERE finance_records.type = 'salary'
              AND TRIM(LOWER(employees.department)) = TRIM(LOWER(%s))
        """, (department,))
        salaries = [row[0] for row in cursor.fetchall()]
        cursor.close()
        conn.close()

        print("üìä Lek√©rdezett fizet√©sek:", salaries)

        if not salaries:
            return None

        # üîÅ Decimal ‚Üí float konverzi√≥
        float_salaries = [float(s) for s in salaries]

        avg_salary = sum(float_salaries) / len(float_salaries)
        return round(avg_salary * 1.05, 2)

    except Exception as e:
        print("‚ùå AI hiba:", e)
        return None
# üåê Kezd≈ëoldal
@app.route('/')
def home():
    return '‚úîÔ∏è AI fizet√©s API m≈±k√∂dik!'

# üìã Dolgoz√≥k lek√©rdez√©se (hire_date ISO form√°tumban!)
@app.route('/api/employees', methods=['GET'])
def get_employees():
    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor(dictionary=True)
        cursor.execute("SELECT * FROM employees")
        rows = cursor.fetchall()
        cursor.close()
        conn.close()

        # üõ†Ô∏è hire_date ISO-form√°tumra konvert√°l√°s
        for row in rows:
            if isinstance(row.get('hire_date'), (str, type(None))):
                continue
            row['hire_date'] = row['hire_date'].strftime('%Y-%m-%d')

        return jsonify(rows)
    except Exception as e:
        print("‚ùå Hiba dolgoz√≥k lek√©rdez√©sekor:", e)
        return jsonify({"error": str(e)}), 500

# üíæ Fizet√©s ment√©se
@app.route('/api/salary', methods=['POST'])
def save_salary():
    data = request.get_json()
    employee_id = data.get("employee_id")
    salary = data.get("salary")
    month = data.get("month")

    if not all([employee_id, salary, month]):
        return jsonify({"error": "Hi√°nyz√≥ mez≈ëk"}), 400

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()

        # üõ°Ô∏è Ellen≈ërz√©s: dolgoz√≥ l√©tezik-e
        cursor.execute("SELECT COUNT(*) FROM employees WHERE id = %s", (employee_id,))
        if cursor.fetchone()[0] == 0:
            cursor.close()
            conn.close()
            return jsonify({"error": "Nem l√©tez≈ë dolgoz√≥ ID"}), 404

        # üíæ Ment√©s
        cursor.execute("""
            INSERT INTO finance_records (employee_id, amount, month, type)
            VALUES (%s, %s, %s, 'salary')
        """, (employee_id, salary, month))
        conn.commit()
        cursor.close()
        conn.close()
        return jsonify({"status": "Sikeres ment√©s"}), 200

    except Exception as e:
        print("‚ùå Hiba fizet√©s ment√©sekor:", e)
        return jsonify({"error": str(e)}), 500

# üîç AI fizet√©s aj√°nl√°s
@app.route('/api/salary/recommend', methods=['GET'])
def salary_recommendation():
    department = request.args.get("department")
    if not department:
        return jsonify({"error": "Hi√°nyz√≥ oszt√°ly"}), 400

    recommendation = recommend_salary(department)
    if recommendation is None:
        return jsonify({"message": "Nincs el√©rhet≈ë adat az oszt√°lyhoz"}), 404

    return jsonify({
        "recommended_salary": recommendation,
        "note": "AI javaslat 5% emel√©ssel"
    })

# üöÄ Ind√≠t√°s
if __name__ == '__main__':
    app.run(debug=True)